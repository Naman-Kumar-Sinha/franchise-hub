# =============================================================================
# FranchiseHub API Configuration
# =============================================================================
#
# PROFILE SWITCHING:
#
# Development (SQLite):
#   mvn spring-boot:run
#   mvn spring-boot:run -Dspring-boot.run.profiles=dev
#
# Production (MySQL):
#   mvn spring-boot:run -Dspring-boot.run.profiles=prod
#   java -jar target/franchise-hub-api-1.0.0.jar --spring.profiles.active=prod
#
# Environment Variables for Production:
#   DB_HOST=your-mysql-host
#   DB_PORT=3306
#   DB_NAME=franchise_hub
#   DB_USERNAME=your-username
#   DB_PASSWORD=your-password
#   JWT_SECRET=your-jwt-secret-key
#
# =============================================================================

spring:
  application:
    name: franchise-hub-api

  profiles:
    active: dev
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.community.dialect.SQLiteDialect
    defer-datasource-initialization: true

  sql:
    init:
      mode: never
  
  datasource:
    url: jdbc:sqlite:franchise_hub.db
    driver-class-name: org.sqlite.JDBC
    username: 
    password: 

server:
  port: 8080
  servlet:
    context-path: /api/v1

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890123456789012345678901234567890}
  expiration: 86400000 # 24 hours in milliseconds
  refresh-expiration: 604800000 # 7 days in milliseconds

# CORS Configuration
cors:
  allowed-origins:
    - http://localhost:4200
    - http://localhost:3000
    - http://localhost:3001
    - https://franchisehub.com
    - https://www.franchisehub.com
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
    - PATCH
  allowed-headers:
    - "*"
  allow-credentials: true

# Logging Configuration
logging:
  level:
    com.franchisehub.api: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# SpringDoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui/index.html
    operationsSorter: method
    tagsSorter: alpha
    disable-swagger-default-url: true


# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:sqlite:franchise_hub_dev.db
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:franchise_hub}?useSSL=${DB_SSL:false}&serverTimezone=${DB_TIMEZONE:UTC}&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME:franchise_user}
    password: ${DB_PASSWORD:franchise_password}
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_MIN_IDLE:5}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:validate}  # Use 'create-drop' for first run, then 'validate'
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

# Production logging
logging:
  level:
    com.franchisehub.api: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: "jdbc:sqlite::memory:"
  jpa:
    hibernate:
      ddl-auto: create-drop
  sql:
    init:
      mode: never
